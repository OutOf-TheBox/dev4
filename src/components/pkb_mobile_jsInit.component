<apex:component controller="pkb_mobile_proxy">
	<script>
			//To use as Loader / default image 40x40, if change size, be sure to check css to center the item properly
			pkb_loaderImgSource = "{!URLFOR($Resource.pkb_mobile,'imgs/loaderSmall.gif')}";


			PKB_HomePage = 'pkb_mobile';
			function createNode (parent, data){

				node = new Object();
				node.root = parent;
				node.rootName = data.rootName;
				node.name  = data.subCatName;
				node.label = data.label;
				node.rootPath = (parent.rootPath == "" )? data.subCatName : parent.rootPath +':'+data.subCatName;
				node.depth = data.depth;
				node.dcIndex = data.dcIndex;
				node.childs = new Array();
				parent.childs.push(node);
				return node;
			}

			function createTree(lastNode,nodeData){
				if (prevD == currentD){
					parentNode = lastNode.root;
				}
				if (prevD < currentD){
					parentNode = lastNode;
				}
				if (prevD > currentD){
					//navigate back using root
					parentNode = lastNode;
					tmp = prevD;
					i = 10;
					while ((currentD <= tmp) || i == 0){
						parentNode = parentNode.root;
						tmp--;
						i--;
					}
				}
				return createNode(parentNode,nodeData);
			}

			nodeData={catName:"ROOT",subCatName:"ROOT",label:"ROOT",depth:-1};
			root = new Object();
			root.childs = new Array();
			root.label = "ROOT";
			root.name = "ROOT";
			root.rootPath = "";
			root.depth = -1;
			prevD = -1;
			rootRelations = {};

			prevD = -1;
			currentD = 0;
			nodeData={catName:"l",subCatName:"l",rootName : "l",label:"{!$Label.PKB2_Languages}",depth:0,dcIndex:0};
			lastNode = createTree(root,nodeData);
			prevD = currentD;
			categoryIndex =0 ;

			dataCList = new Array();
			dataCList[categoryIndex]="l";
		</script>

		<apex:repeat value="{!languages}" var="l">
		<apex:variable var="langLabel" value="pkb2_lang_{!l}" />
		<script>
			currentD = 1;
			nodeData={	catName		:"{!JSENCODE(l)}",
						subCatName	:"{!JSENCODE(l)}",
						label		:"{!$Label[langLabel]}",
						rootName 	: "l",
						depth		:1,
						dcIndex		:0};
			lastNode = createTree(lastNode,nodeData);

			prevD = currentD;
			rootRelations['{!JSENCODE(l)}'] = '{!langMap[JSENCODE(l)]}';
			</script>
		</apex:repeat>

		<apex:repeat value="{!categories}" var="c">
			<script>

				prevD = -1;
				currentD = 0;

				categoryIndex ++;
				nodeData={	catName:	"{!JSENCODE(c['catName'])}",
							subCatName:	"All",
							label:		"{!JSENCODE(c['catName'])}",
							rootName : 	"{!JSENCODE(c['catName'])}",
							depth:		0,
							dcIndex:categoryIndex};
				lastNode = createTree(root,nodeData);
				prevD = currentD;
				dataCList[categoryIndex]="{!JSENCODE(c['catName'])}";

				rootRelations['{!JSENCODE(c['catName'])}'] = '{!HTMLENCODE(c['catLabel'])}';
			</script>

			<knowledge:categoryList categoryVar="category" categoryGroup="{!c['catName']}" rootCategory="{!c['rootName']}"   level="-1"  >
				<script>
					currentD = parseInt("{!category.depth}");
					nodeData={	catName:	"{!JSENCODE(c['catName'])}",
								subCatName:	"{!JSENCODE(category.Name)}",
								label:		"{!JSENCODE(category.Label)}",
								rootName : 	"{!JSENCODE(c['catName'])}",
								depth:		{!category.depth},
								dcIndex:categoryIndex};

					lastNode = createTree(lastNode,nodeData);
					prevD = currentD;
					rootRelations['{!JSENCODE(category.Name)}'] = '{!JSENCODE(category.Label)}';
				</script>
			</knowledge:categoryList>
		</apex:repeat>
		<script>
		//default Lang
		window.defaultLang = 'en_US';
		//Adding no Filter Option
		for (var i=0;i<window.root.childs.length;i++){
			nodeData={	catName:	"No Filter",
						subCatName:	"No Filter",
						label:		"No Filter",
						rootName : 	"No Filter",
						depth:		1,
						dcIndex: window.root.childs[i].dcIndex};
	    	/*
	    	if (window.root.childs[i].childs.length > 0
	    			&& window.root.childs[i].name != 'l'){

	    			 //Adding the All option
	    			 var n = {
	    			 	dcIndex : window.root.childs[i].dcIndex,
	    			 	depth	: window.root.childs[i].depth+1,
	    			 	label	: "All",
	    			 	name	: window.root.childs[i].name,
	    			 	rootName: window.root.childs[i].rootName,
	    			 	rootPath: window.root.childs[i].rootPath,
	    			 	root	: {},
	    			 	childs	: []
	    			 };
	    			 window.root.childs[i].childs.unshift(n);

	    	}*/
	    	if ( window.root.childs[i].name != 'l' ) window.root.childs[i].childs.unshift(nodeData);

		}
		//PKB2_Languages
		rootRelations['l'] = '{!$Label.PKB2_Languages}';

		//cti integration
		var pkb2_ctiCONTSTANTS = function(){
			var labels = {
					'iphone_pause'	: ",",
					'iphone_wait' 	: "*",
					'android_pause' : ",",
					'android_wait'  : ";"
			};

			function deviceIsAndroid(){ return ( /Android/i.test(navigator.userAgent) );};
			function deviceIsWebOS (){ return ( /webOS/i.test(navigator.userAgent) );};
			function deviceIsIPhone(){ return ( /iPhone/i.test(navigator.userAgent) );};
			function deviceIsIPad(){ return ( /iPad/i.test(navigator.userAgent) );};
			function deviceIsBlackBerry(){ return ( /BlackBerry/i.test(navigator.userAgent) );};
			function deviceIsIPod(){return ( /iPod/i.test(navigator.userAgent) );};

			function replaceWithCTI(numberToCall,ctiString,caseNumber){

				if (deviceIsIPhone()){
					numberToCall += ctiString.replace(/\[P\]/g,labels['iphone_pause']).replace(/\[W\]/g,labels['iphone_wait']).replace(/\[CN\]/g,caseNumber);
				}else
				if (deviceIsAndroid()){
					numberToCall += ctiString.replace(/\[P\]/g,labels['android_pause']).replace(/\[W\]/g,labels['android_wait']).replace(/\[CN\]/g,caseNumber);
				}


				return numberToCall;
			}

			return {
					get: replaceWithCTI
			}
		}();

		function liveAgentIframe( status){
			//console.log(' chat online :'+status);
			if (status){
				$('#liveagent_button_online_footer').show();
				$('#liveagent_button_offline_footer').hide();
			}else{
				$('#liveagent_button_online_footer').hide();
				$('#liveagent_button_offline_footer').show();
			}
		}

		var resourcesPath  ="{!URLFOR($Resource.pkb_mobile)}" ;
		var iframeSrcPath  ="{!URLFOR($Page.pkb_liveAgentIframe)}" ;

		</script>
</apex:component>